<?php

namespace app\modules\adsplatform\models;

use app\components\HodoActiveRecord;
use Yii;
use yii\caching\DbDependency;
use yii\helpers\ArrayHelper;
/**
 * This is the model class for table "ad".
 *
 * @property integer $id
 * @property integer $provider
 * @property integer $position_id
 * @property integer $type
 * @property integer $target
 * @property string $title
 * @property string $subtitle
 * @property string $detail
 * @property string $image
 * @property string $image_vertical
 * @property string $link
 * @property string $channel
 * @property string $package_name
 * @property integer $version_code
 * @property string $app_id
 * @property string $ad_id
 * @property integer $start_time
 * @property integer $end_time
 * @property integer $show_time
 * @property integer $collect_data
 * @property integer $ceiling_view
 * @property integer $ceiling_day_view
 * @property integer $ceiling_day_click
 * @property integer $ceiling_total_view
 * @property integer $ceiling_total_click
 * @property integer $total_view
 * @property integer $total_click
 * @property integer $total_download
 * @property integer $total_install
 * @property integer $total_failure
 * @property integer $create_time
 * @property integer $update_time
 * @property integer $status
 */
class Ad extends HodoActiveRecord
{

    /**
     *广告的数据列表
     */
    public static function getAdList($id=null){
        $db = Yii::$app->db;// or Category::getDb()
        $dep = new DbDependency();
        $dep->sql = 'SELECT count(*) FROM '.self::tableName();
        $result = $db->cache(function ($db) use ($id) {
            $where = is_null($id)?'1=1':'provider='.(int)$id;
            return self::find()
                ->select(['id','title','provider','position_id'])
                ->where($where)
                ->orderBy('id desc')
                ->asArray()
                ->all();
        }, 60, $dep);
        foreach ($result as $key=>$item) {
           $str = $item['title'].'-'.Datadict::getDataValue('ad_provider', $item['provider']).'-'.Datadict::getDataValue('ad_position_id', $item['position_id']);
            $result[$key]['title'] = $str;
        }
        return ArrayHelper::map($result, 'id', 'title');

    }

    const START_TIME = 'start_time';
    const END_TIME = 'end_time';

    public function save($runValidation = true, $attributeNames = null)
    {
            if($this->hasAttribute(self::START_TIME))
                $this->setAttribute(self::START_TIME, strtotime($this->start_time));
            if($this->hasAttribute(self::END_TIME))
                $this->setAttribute(self::END_TIME, strtotime($this->end_time));
      return  parent::save($runValidation, $attributeNames); // TODO: Change the autogenerated stub
    }


    public function getAttributeHint($attribute){
        $a = [
            'id' => '主键',
            'provider' => '广告厂商',
            'position_id' => '广告位',
            'type' => '展示类型',
            'target' => '目标',
            'title' => '标题',
            'subtitle' => '副标题',
            'detail' => '详情',
            'image' => '图片地址',
            'image_vertical' => '竖屏图片地址',
            'link' => '广告链接',
            'channel' => '渠道',
            'package_name' => '包名',
            'version_code' => '版本号',
            'app_id' => '第三方APPID',
            'ad_id' => '第三方广告ID',
            'start_time' => '点击开始时间后需要按时分秒请手动更改下',
            'end_time' => '点击结束时间后需要按时分秒请手动更改下',
            'show_time' => '广告展示时间',
            'collect_data' => '收集信息',
            'ceiling_view' => '单用户展示次数上限',
            'ceiling_day_view' => '单天展示数限制',
            'ceiling_day_click' => '单天点击数限制',
            'ceiling_total_view' => '总展示数限制',
            'ceiling_total_click' => '总点击数限制',
            'total_view' => '总展现数',
            'total_click' => '总点击数',
            'total_download' => '总下载数',
            'total_install' => '总安装数',
            'total_failure' => '总失败数',
            'create_time' => '创建时间',
            'update_time' => '更新时间',
            'status' => '状态',
        ];
        return [];
    }
    public function HintFieldAttributeLabels(){
        return [];
    }
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'ad';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['provider', 'position_id', 'type', 'target', 'version_code',  'collect_data', 'ceiling_view', 'ceiling_day_view', 'ceiling_day_click', 'ceiling_total_view', 'ceiling_total_click', 'total_view', 'total_click', 'total_download', 'total_install', 'total_failure',  'status'], 'integer'],
            [['provider', 'position_id', 'type', 'target', 'version_code', 'start_time', 'end_time', 'show_time', 'collect_data', 'ceiling_view',  'status', 'ceiling_day_click'], 'required'],
            [['detail', 'image', 'image_vertical', 'link'], 'string'],
            [['image', 'image_vertical', 'link'], 'url'],
            [['title', 'subtitle', 'package_name', 'app_id', 'ad_id'], 'string', 'max' => 100],
            [['channel'], 'string', 'max' => 20],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => '主键',
            'provider' => '广告厂商',
            'position_id' => '广告位',
            'type' => '展示类型',
            'target' => '目标',
            'title' => '标题',
            'subtitle' => '副标题',
            'detail' => '详情',
            'image' => '图片地址',
            'image_vertical' => '竖屏图片地址',
            'link' => '广告链接',
            'channel' => '渠道',
            'package_name' => '包名',
            'version_code' => '版本号',
            'app_id' => '第三方APPID',
            'ad_id' => '第三方广告ID',
            'start_time' => '开始时间',
            'end_time' => '结束时间',
            'show_time' => '广告展示时间',
            'collect_data' => '收集信息',
            'ceiling_view' => '单用户展示次数上限',
            'ceiling_day_view' => '单天展示数限制',
            'ceiling_day_click' => '单天点击数限制',
            'ceiling_total_view' => '总展示数限制',
            'ceiling_total_click' => '总点击数限制',
            'total_view' => '总展现数',
            'total_click' => '总点击数',
            'total_download' => '总下载数',
            'total_install' => '总安装数',
            'total_failure' => '总失败数',
            'create_time' => '创建时间',
            'update_time' => '更新时间',
            'status' => '状态',
        ];
    }
}
