<?php

namespace app\modules\adsplatform\controllers;

use Yii;
use app\modules\adsplatform\models\Strategy;
use app\modules\adsplatform\models\StrategySearch;
use app\modules\adsplatform\models\StrategyListSearch;
use app\modules\adsplatform\models\StrategyAdListSearch;

use app\components\HodoController;
use yii\web\NotFoundHttpException;
use app\components\HodoActiveForm;
use yii\helpers\Url;
use yii\web\Response;
/**
 * StrategyController implements the CRUD actions for Strategy model.
 */
class StrategyController extends HodoController
{

    public function actionSwitchStatus($id, $status){

        $model = $this->findModel($id);
        $model->status = $status;
        if($model->save(false)){
            return $this->redirect(['index']);
        }
        return $this->redirect(['index']);
    }
    /**
     * Lists all Strategy models.
     * @return mixed
     */
    public function actionIndex()
    {
        $searchModel = new StrategySearch();
        $dataProvider = $searchModel->search(Yii::$app->request->queryParams);
    
        return $this->render('index', [
            'searchModel' => $searchModel,
            'dataProvider' => $dataProvider,
        ]);
    }

    /**
     * Displays a single Strategy model.
     * @param integer $id
     * @return mixed
     */
    public function actionView($id)
    {


        $searchadlistModel = new StrategyAdListSearch();
        $searchadlistModel->strategy_id = $id;
        $dataProvider_adlist = $searchadlistModel->search(Yii::$app->request->queryParams);
       
        $searchModel = new StrategyListSearch();
        $searchModel->strategy_id = $id;
        $dataProvider = $searchModel->search(Yii::$app->request->queryParams);

        $strategy_name = Strategy::findOne($id);

        if (Yii::$app->request->isAjax) {
            return $this->renderAjax('view', [
                'model' => $this->findModel($id),
                'searchModel' => $searchModel,
                'dataProvider' => $dataProvider,
                'dataProvider_adlist'  => $dataProvider_adlist,
                'searchadlistModel' => $searchadlistModel,
                'strategy_name'=> $strategy_name['name']    
            ]);
        }
        return $this->render('view', [
            'model' => $this->findModel($id),
            'searchModel' => $searchModel,
            'dataProvider' => $dataProvider
        ]);
    }

    /**
     * Creates a new Strategy model.
     * If creation is successful, the browser will be redirected to the 'view' page.
     * @return mixed
     */
    public function actionCreate()
    {
        $model = new Strategy();

        if ($model->load(Yii::$app->request->post()) && $model->save()) {
            return $this->redirect(['tabs','id' => $model->id]);
        } else {
            return $this->render('create', [
                'model' => $model,
            ]);
        }
    }

    /**
     * 切换多个表
     */

    public function actionTabs($id){
        $model = $this->findModel($id);

        return $this->render('tabs', [
            'model' => $model,
        ]);
    }

    /**
     * Updates an existing Strategy model.
     * If update is successful, the browser will be redirected to the 'view' page.
     * @param integer $id
     * @return mixed
     */
    public function actionUpdate($id)
    {

        $model = $this->findModel($id);
        if(Yii::$app->request->isAjax && $model->load(Yii::$app->request->post())){
            Yii::$app->response->format = Response::FORMAT_JSON;
            $result = HodoActiveForm::validate($model);
            if(empty($result) && $model->save()){
                return $this->renderAlert('添加成功', '恭喜你添加应用成功','进行下一步操作','');
            }
            return $result;
        }

        if ($model->load(Yii::$app->request->post()) && $model->save()) {
            return $this->redirect(['index', 'StrategySearch[id]' => $model->id]);
        } else {
            return $this->render('update', [
                'model' => $model,
            ]);
        }
    }

    /**
     * Deletes an existing Strategy model.
     * If deletion is successful, the browser will be redirected to the 'index' page.
     * @param integer $id
     * @return mixed
     */
    public function actionDelete($id)
    {
        $this->findModel($id)->delete();

        return $this->redirect(['index']);
    }

    /**
     * Finds the Strategy model based on its primary key value.
     * If the model is not found, a 404 HTTP exception will be thrown.
     * @param integer $id
     * @return Strategy the loaded model
     * @throws NotFoundHttpException if the model cannot be found
     */
    protected function findModel($id)
    {
        if (($model = Strategy::findOne($id)) !== null) {
            return $model;
        } else {
            throw new NotFoundHttpException('The requested page does not exist.');
        }
    }
}
