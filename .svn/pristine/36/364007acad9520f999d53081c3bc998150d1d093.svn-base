<?php
namespace app\components;
use app\assets\SweetalertAsset;
use yii\widgets\ActiveForm;
use kartik\file\FileInput;
use kartik\select2\Select2;
use yii\helpers\Html;
use app\extensions\widget\HodoDaterangepicker;
use app\extensions\widget\HodoDatetimeRangepicker;
use Yii;
/**
 * Created by PhpStorm.
 * User: i-sheng
 * Date: 15-11-10
 * Time: 下午4:08
 */

class HodoActiveForm extends ActiveForm
{
    public $fieldClass = 'app\components\HodoActiveField';
    /**
     * @var bool 判断是否是搜索表单。如果是就不注册registerSubmitJS method
     */
    public $is_search = true;

    /**
     * Runs the widget.
     * This registers the necessary javascript code and renders the form close tag.
     * @throws InvalidCallException if `beginField()` and `endField()` calls are not matching
     */
    public function run()
    {
        parent::run(); // TODO: Change the autogenerated stub

        if (!$this->is_search) {
            $this->registerSubmitJS();
        }
    }

    public function registerSubmitJS(){
        $id = $this->getId();
$js =<<<EOD
(function() {
    var form = $('form#{$id}');
    if(form.find('.has-error').length) {
        return false;
    }
   form.find(':submit').click(function(){
        $.ajax({
            url: form.attr('data-url'),
            type: 'post',
            data: form.serialize(),
            success: function(response) {
                if(response.status == 'success' ){
                   swal({
                      title: response.title,
                      text: response.text,
                      type: response.type,
                      showCancelButton: response.showCancelButton,
                      confirmButtonClass: response.confirmButtonClass,
                      confirmButtonText: response.confirmButtonText,
                      closeOnConfirm: false,
                      cancelButtonText: '关闭'
                    },function(){
                        if(response.href != ''){
                            window.location.href = response.href;
                        }else if(response.tabs != ''){
                            var id = response.tabs;
                            jQuery('#tabs-apps li').removeClass('active');
                            jQuery('#tabs-apps li').eq(id).addClass('active');
                            jQuery('#tabs-apps li').eq(id).find('label').attr('aria-expanded', true);
                            jQuery('.tab-content div').removeClass('active');
                            jQuery('#tabs-apps-tab'+id).addClass('active');

                            jQuery('.sweet-overlay').css({'display': 'none'});
                            jQuery('.sweet-alert').css({'display': 'none'});



                        }
                    });
                    return false;
                }
                form.yiiActiveForm('updateMessages', response , true);
            }
        });
    });

    return false;
})();
EOD;
        SweetalertAsset::register($this->view);
        $this->view->registerJs($js);
    }


    /**
     * 文体框
     * @param $model HodoActiveRecord
     * @param $name
     * @param array $options
     * @return $this
     */
    public function textInput($model, $name, $fieldConfig=[], $options=[]){
        return $this->model($model, $name, $fieldConfig)->textInput($options)->hint($model->HintFieldAttributeLabels()[$name]);
    }
    /**
     *
     */
    public function hiddenInput($model, $name){
        return $this->model($model, $name)->hiddenInput()->label(false);
    }
    /**
     * 大文本框
     * @param $model
     * @param $name
     * @param array $options
     * @return $this
     */
    public function textarea($model, $name, $fieldConfig=[], $options=[]){
        return $this->model($model, $name, $fieldConfig)->textarea($options)->hint($this->getHint($model, $name));
    }

    /**
     *下拉框
     * @param $model
     * @param $name
     * @param array $fieldConfig
     * @param array $data
     * @param array $options
     * @return $this
     */
    public function dropDownList($model, $name, $fieldConfig=[] , $data =[] ,$options=[]){
        return $this->model($model, $name, $fieldConfig)->dropDownList(['' => '选择...']+$data, $options)->hint($this->getHint($model, $name));
    }

    /**
     * 文件上传
     * @param $model
     * @param $name
     * @param array $fieldConfig
     * @param array $config
     * @return $this
     */
    public function fileInput($model, $name, $fieldConfig=[], $config=[]){
        $this->fileInputCallBack($model, $name);
        return $this->model($model, $name, $fieldConfig)->widget(FileInput::className(), $config)->hint($this->getHint($model, $name));
    }

    public function select2($model, $name, $config=[]){
       return $this->model($model, $name)->widget(Select2::className(), $config)->hint($this->getHint($model, $name));
    }

    public function daterangepicker($model, $name, $config=[]){
       return $this->model($model, $name)->widget(HodoDaterangepicker::className(), $config)->hint($this->getHint($model, $name));
    }

    public function datetimerangepicker($model, $name, $config=[]){
       return $this->model($model, $name)->widget(HodoDatetimeRangepicker::className(), $config)->hint($this->getHint($model, $name));
    }

    public function fileInputCallBack($model, $name){
        $iconId = Html::getInputId($model, $name);
        $iconName = Html::getInputName($model, $name);
        $js =<<<JS

// CATCH RESPONSE
$('#{$iconId}').on('fileuploaded', function(event, data, previewId, index) {
    input = $("input:hidden[name='{$iconName}']");
    value = input.val();
    filepath = data.response.success;
    if(value){
        input.val(value+','+filepath);
    }
    input.val(filepath);
});

JS;

        Yii::$app->view->registerJs($js, \yii\web\View::POS_END );
    }

    /**
     * @param $model
     * @param $name
     * @return \yii\widgets\ActiveField
     */
    protected function model($model, $name)
    {
        return $this->field($model, $name);
    }

    /**
     * @param $model
     * @param $name
     * @return mixed
     */
    protected function getHint($model, $name)
    {
        return $model->getAttributeHint($name);
    }


}