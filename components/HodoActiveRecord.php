<?php
namespace app\components;
/**
 * Created by PhpStorm.
 * User: i-sheng
 * Date: 15-11-9
 * Time: 下午3:49
 */
use yii\db\ActiveRecord;
use yii\behaviors\TimestampBehavior;

class HodoActiveRecord extends ActiveRecord
{
    const CREATE_USER_ID = 'create_user_id';
    const UPDATE_USER_ID = 'update_user_id';
    const CREATE_USER_IP = 'create_user_ip';
    const STATUS = 'status';
    const STATUS_VALUE = 3;
    /**
     * @return false|int
     * @throws \Exception
     * 假删除数据设设置状态等于5
     */
    public function delete()
    {
//        if ($this->hasAttribute(self::STATUS)) {
//            $this->setAttribute(self::STATUS, self::STATUS_VALUE);
//            return $this->save(false, [self::STATUS]);
//        }
        return parent::delete(); // TODO: Change the autogenerated stub
    }


    public function HintFieldAttributeLabels()
    {
        // TODO: Implement HintFieldAttributeLabels() method.
    }

//    public function save($runValidation = true, $attributeNames = null)
//    {
//        if($this->isNewRecord){
//            if($this->hasAttribute(self::CREATE_USER_ID))
//                $this->setAttribute(self::CREATE_USER_ID, (int)\Yii::$app->user->id);
//            if($this->hasAttribute(self::CREATE_USER_IP))
//                $this->setAttribute(self::CREATE_USER_IP, \Yii::$app->request->getUserIP());
//        }else{
//            if($this->hasAttribute(self::UPDATE_USER_ID))
//                $this->setAttribute(self::UPDATE_USER_ID, (int)\Yii::$app->user->id);
//        }
//        return parent::save($runValidation, $attributeNames); // TODO: Change the autogenerated stub
//    }


    public function behaviors()
    {
        return [
            [
                'class' => TimestampBehavior::className(),
                'createdAtAttribute' => 'create_time',
                'updatedAtAttribute' => 'update_time',
            ],
        ];
    }
}